--.schema
CREATE TABLE songs (_id INTEGER PRIMARY KEY, track INTEGER, title TEXT NOT NULL, album INTEGER);
CREATE TABLE albums (_id INTEGER PRIMARY KEY, name TEXT NOT NULL, artist INTEGER);
CREATE TABLE artists (_id INTEGER PRIMARY KEY, name TEXT NOT NULL);
CREATE VIEW artist_list AS
SELECT artists.name, albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
ORDER BY artists.name, albums.name, songs.track
/* artist_list(name,"name:1",track,title) */;



SELECT * FROM artist_list

--Challenge 1
SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name = "Forbidden";

--Challenge 2
SELECT songs.track, songs.title FROM songs
INNER JOIN albums on songs.album = albums._id
WHERE albums.name IS "Forbidden"
ORDER BY songs.track;

--Challenge 3
SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Deep Purple";

--Challenge 4
UPDATE artists SET name = 'One Kitten' WHERE artists.name IS "Mehitabel";

--Challenge 6
SELECT title FROM artist_list
WHERE name IS "Aerosmith"
ORDER BY title;

--Challenge 7
SELECT count(title) FROM artist_list
WHERE name IS "Aerosmith";

--Challenge 8
SELECT DISTINCT title FROM artist_list WHERE name = 'Aerosmith'
ORDER BY title;

--Challenge 9
SELECT count(DISTINCT title) FROM artist_list WHERE name = 'Aerosmith'
ORDER BY title;

--Challenge 10
SELECT count(DISTINCT name) FROM artist_list WHERE name = "Aerosmith";
SELECT count(DISTINCT album) FROM artist_list WHERE name = "Aerosmith";
